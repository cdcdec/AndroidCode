apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def apkTime = getTimeSuffix()

android {
    compileSdkVersion 28
    signingConfigs {
        laiqiankuai {
            keyAlias 'androidcode'
            keyPassword 'code-android'
            storeFile file('E:/Android/workplace/AndroidCode/CustomKeyboard/AndroidCode.jks')
            storePassword 'code-android'
        }
    }
    defaultConfig {
        applicationId "com.cdc.Keyboard"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.laiqiankuai
            zipAlignEnabled true
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.laiqiankuai
            zipAlignEnabled true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "LQK_${defaultConfig.versionName}_${apkTime}_${defaultConfig.versionCode}.apk"
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res-laiqiankuai'
            ]
        }
    }

    aaptOptions.cruncherEnabled = false

    aaptOptions.useNewCruncher = false

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
    implementation 'me.jessyan:autosize:1.1.2'
    implementation 'com.assistne.android:icon-dot-text-view:1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

//apk包的后缀。年月日，例如20181203174200。
def getTimeSuffix() {
    def date = new Date()
    def time = date.format('yyyyMMddHHmmss')
    return time
}

/*configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}*/
